{"version":3,"sources":["../../src/core/courses/pages/my-overview/my-overview.module.ts","../../src/core/courses/pages/my-overview/my-overview.ts"],"names":[],"mappings":"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","file":"41.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreCoursesMyOverviewPage } from './my-overview';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CoreCoursesComponentsModule } from '../../components/components.module';\nimport { CoreSiteHomeComponentsModule } from '@core/sitehome/components/components.module';\n\n@NgModule({\n    declarations: [\n        CoreCoursesMyOverviewPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CoreCoursesComponentsModule,\n        CoreSiteHomeComponentsModule,\n        IonicPageModule.forChild(CoreCoursesMyOverviewPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class CoreCoursesMyOverviewPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/my-overview/my-overview.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnDestroy, ViewChild } from '@angular/core';\nimport { IonicPage, Searchbar, NavController } from 'ionic-angular';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { CoreCoursesProvider } from '../../providers/courses';\nimport { CoreCoursesHelperProvider } from '../../providers/helper';\nimport { CoreCoursesMyOverviewProvider } from '../../providers/my-overview';\nimport { CoreCourseHelperProvider } from '@core/course/providers/helper';\nimport { CoreCourseOptionsDelegate } from '@core/course/providers/options-delegate';\nimport { AddonCourseCompletionProvider } from '@addon/coursecompletion/providers/coursecompletion';\nimport { CoreSiteHomeProvider } from '@core/sitehome/providers/sitehome';\nimport * as moment from 'moment';\nimport { CoreTabsComponent } from '@components/tabs/tabs';\nimport { CoreSiteHomeIndexComponent } from '@core/sitehome/components/index/index';\n\n/**\n * Page that displays My Overview.\n */\n@IonicPage({ segment: 'core-courses-my-overview' })\n@Component({\n    selector: 'page-core-courses-my-overview',\n    templateUrl: 'my-overview.html',\n})\nexport class CoreCoursesMyOverviewPage implements OnDestroy {\n    @ViewChild(CoreTabsComponent) tabsComponent: CoreTabsComponent;\n    @ViewChild('searchbar') searchbar: Searchbar;\n    @ViewChild(CoreSiteHomeIndexComponent) siteHomeComponent: CoreSiteHomeIndexComponent;\n\n    firstSelectedTab: number;\n    siteHomeEnabled: boolean;\n    tabsReady = false;\n    tabShown = 'courses';\n    timeline = {\n        sort: 'sortbydates',\n        events: [],\n        loaded: false,\n        canLoadMore: undefined\n    };\n    timelineCourses = {\n        courses: [],\n        loaded: false,\n        canLoadMore: false\n    };\n    courses = {\n        selected: 'inprogress',\n        loaded: false,\n        filter: '',\n        past: [],\n        inprogress: [],\n        future: []\n    };\n    showFilter = false;\n    searchEnabled: boolean;\n    filteredCourses: any[];\n    tabs = [];\n    prefetchCoursesData = {\n        inprogress: {},\n        past: {},\n        future: {}\n    };\n    downloadAllCoursesEnabled: boolean;\n    siteName: string;\n\n    protected prefetchIconsInitialized = false;\n    protected isDestroyed;\n    protected updateSiteObserver;\n    protected courseIds = '';\n\n    constructor(private navCtrl: NavController, private coursesProvider: CoreCoursesProvider,\n            private domUtils: CoreDomUtilsProvider, private myOverviewProvider: CoreCoursesMyOverviewProvider,\n            private courseHelper: CoreCourseHelperProvider, private sitesProvider: CoreSitesProvider,\n            private siteHomeProvider: CoreSiteHomeProvider, private courseOptionsDelegate: CoreCourseOptionsDelegate,\n            private eventsProvider: CoreEventsProvider, private coursesHelper: CoreCoursesHelperProvider,\n            private utils: CoreUtilsProvider, private courseCompletionProvider: AddonCourseCompletionProvider) {\n        this.loadSiteName();\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.searchEnabled = !this.coursesProvider.isSearchCoursesDisabledInSite();\n        this.downloadAllCoursesEnabled = !this.coursesProvider.isDownloadCoursesDisabledInSite();\n\n        // Refresh the enabled flags if site is updated.\n        this.updateSiteObserver = this.eventsProvider.on(CoreEventsProvider.SITE_UPDATED, () => {\n            const wasEnabled = this.downloadAllCoursesEnabled;\n\n            this.searchEnabled = !this.coursesProvider.isSearchCoursesDisabledInSite();\n            this.downloadAllCoursesEnabled = !this.coursesProvider.isDownloadCoursesDisabledInSite();\n\n            if (!wasEnabled && this.downloadAllCoursesEnabled && this.courses.loaded) {\n                // Download all courses is enabled now, initialize it.\n                this.initPrefetchCoursesIcons();\n            }\n\n            this.loadSiteName();\n        });\n\n        // Decide which tab to load first.\n        this.siteHomeProvider.isAvailable().then((enabled) => {\n            const site = this.sitesProvider.getCurrentSite(),\n                displaySiteHome = site.getInfo() && site.getInfo().userhomepage === 0;\n\n            this.siteHomeEnabled = enabled;\n            this.firstSelectedTab = displaySiteHome ? 0 : 1;\n            this.tabsReady = true;\n        });\n    }\n\n    /**\n     * User entered the page.\n     */\n    ionViewDidEnter(): void {\n        this.tabsComponent && this.tabsComponent.ionViewDidEnter();\n    }\n\n    /**\n     * User left the page.\n     */\n    ionViewDidLeave(): void {\n        this.tabsComponent && this.tabsComponent.ionViewDidLeave();\n    }\n\n    /**\n     * Fetch the timeline.\n     *\n     * @param {number} [afterEventId] The last event id.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchMyOverviewTimeline(afterEventId?: number): Promise<any> {\n        return this.myOverviewProvider.getActionEventsByTimesort(afterEventId).then((events) => {\n            this.timeline.events = events.events;\n            this.timeline.canLoadMore = events.canLoadMore;\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting my overview data.');\n        });\n    }\n\n    /**\n     * Fetch the timeline by courses.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchMyOverviewTimelineByCourses(): Promise<any> {\n        return this.fetchUserCourses().then((courses) => {\n            const today = moment().unix();\n            let courseIds;\n            courses = courses.filter((course) => {\n                return course.startdate <= today && (!course.enddate || course.enddate >= today);\n            });\n\n            this.timelineCourses.courses = courses;\n            if (courses.length > 0) {\n                courseIds = courses.map((course) => {\n                    return course.id;\n                });\n\n                return this.myOverviewProvider.getActionEventsByCourses(courseIds).then((courseEvents) => {\n                    this.timelineCourses.courses.forEach((course) => {\n                        course.events = courseEvents[course.id].events;\n                        course.canLoadMore = courseEvents[course.id].canLoadMore;\n                    });\n                });\n            }\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting my overview data.');\n        });\n    }\n\n    /**\n     * Fetch the courses for my overview.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchMyOverviewCourses(): Promise<any> {\n        return this.fetchUserCourses().then((courses) => {\n            // Fetch course completion status.\n            return Promise.all(courses.map((course) => {\n                if (typeof course.enablecompletion != 'undefined' && course.enablecompletion == 0) {\n                    // Completion is disabled for this course, there is no need to fetch the completion status.\n                    return Promise.resolve(course);\n                }\n\n                return this.courseCompletionProvider.getCompletion(course.id).catch(() => {\n                    // Ignore error, maybe course compleiton is disabled or user ha no permission.\n                }).then((completion) => {\n                    course.completed = completion && completion.completed;\n\n                    return course;\n                });\n            }));\n        }).then((courses) => {\n            const today = moment().unix();\n\n            this.courses.past = [];\n            this.courses.inprogress = [];\n            this.courses.future = [];\n\n            courses.forEach((course) => {\n                if ((course.enddate && course.enddate < today) || course.completed) {\n                    // Courses that have already ended.\n                    this.courses.past.push(course);\n                } else if (course.startdate > today) {\n                    // Courses that have not started yet.\n                    this.courses.future.push(course);\n                } else {\n                    // Courses still in progress.\n                    this.courses.inprogress.push(course);\n                }\n            });\n\n            this.courses.filter = '';\n            this.showFilter = false;\n            this.filteredCourses = this.courses[this.courses.selected];\n\n            this.initPrefetchCoursesIcons();\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting my overview data.');\n        });\n    }\n\n    /**\n     * Fetch user courses.\n     *\n     * @return {Promise<any[]>} Promise resolved when done.\n     */\n    protected fetchUserCourses(): Promise<any[]> {\n        return this.coursesProvider.getUserCourses().then((courses) => {\n            const promises = [],\n                courseIds = courses.map((course) => {\n                return course.id;\n            });\n\n            if (this.coursesProvider.canGetAdminAndNavOptions()) {\n                // Load course options of the course.\n                promises.push(this.coursesProvider.getCoursesAdminAndNavOptions(courseIds).then((options) => {\n                    courses.forEach((course) => {\n                        course.navOptions = options.navOptions[course.id];\n                        course.admOptions = options.admOptions[course.id];\n                    });\n                }));\n            }\n\n            this.courseIds = courseIds.join(',');\n\n            promises.push(this.coursesHelper.loadCoursesExtraInfo(courses));\n\n            return Promise.all(promises).then(() => {\n                return courses.sort((a, b) => {\n                    const compareA = a.fullname.toLowerCase(),\n                        compareB = b.fullname.toLowerCase();\n\n                    return compareA.localeCompare(compareB);\n                });\n            });\n        });\n    }\n\n    /**\n     * Show or hide the filter.\n     */\n    switchFilter(): void {\n        this.showFilter = !this.showFilter;\n        this.courses.filter = '';\n        this.filteredCourses = this.courses[this.courses.selected];\n        if (this.showFilter) {\n            setTimeout(() => {\n                this.searchbar.setFocus();\n            }, 500);\n        }\n    }\n\n    /**\n     * The filter has changed.\n     *\n     * @param {any} Received Event.\n     */\n    filterChanged(event: any): void {\n        const newValue = event.target.value && event.target.value.trim().toLowerCase();\n        if (!newValue || !this.courses[this.courses.selected]) {\n            this.filteredCourses = this.courses[this.courses.selected];\n        } else {\n            this.filteredCourses = this.courses[this.courses.selected].filter((course) => {\n                return course.fullname.toLowerCase().indexOf(newValue) > -1;\n            });\n        }\n    }\n\n    /**\n     * Refresh the data.\n     *\n     * @param {any} refresher Refresher.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    refreshMyOverview(refresher: any): Promise<any> {\n        const promises = [];\n\n        if (this.tabShown == 'timeline') {\n            promises.push(this.myOverviewProvider.invalidateActionEventsByTimesort());\n            promises.push(this.myOverviewProvider.invalidateActionEventsByCourses());\n        }\n\n        promises.push(this.coursesProvider.invalidateUserCourses().finally(() => {\n            // Invalidate course completion data.\n            return this.coursesProvider.getUserCourses().then((courses) => {\n                return this.utils.allPromises(courses.map((course) => {\n                    return this.courseCompletionProvider.invalidateCourseCompletion(course.id);\n                 }));\n            });\n        }));\n\n        promises.push(this.courseOptionsDelegate.clearAndInvalidateCoursesOptions());\n        if (this.courseIds) {\n            promises.push(this.coursesProvider.invalidateCoursesByField('ids', this.courseIds));\n        }\n\n        return this.utils.allPromises(promises).finally(() => {\n            switch (this.tabShown) {\n                case 'timeline':\n                    switch (this.timeline.sort) {\n                        case 'sortbydates':\n                            return this.fetchMyOverviewTimeline();\n                        case 'sortbycourses':\n                            return this.fetchMyOverviewTimelineByCourses();\n                        default:\n                    }\n                    break;\n                case 'courses':\n                    this.prefetchIconsInitialized = false;\n\n                    return this.fetchMyOverviewCourses();\n                default:\n            }\n        }).finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Change timeline sort being viewed.\n     */\n    switchSort(): void {\n        switch (this.timeline.sort) {\n            case 'sortbydates':\n                if (!this.timeline.loaded) {\n                    this.fetchMyOverviewTimeline().finally(() => {\n                        this.timeline.loaded = true;\n                    });\n                }\n                break;\n            case 'sortbycourses':\n                if (!this.timelineCourses.loaded) {\n                    this.fetchMyOverviewTimelineByCourses().finally(() => {\n                        this.timelineCourses.loaded = true;\n                    });\n                }\n                break;\n            default:\n        }\n    }\n\n    /**\n     * The tab has changed.\n     *\n     * @param {string} tab Name of the new tab.\n     */\n    tabChanged(tab: string): void {\n        this.tabShown = tab;\n        switch (this.tabShown) {\n            case 'timeline':\n                if (!this.timeline.loaded) {\n                    this.fetchMyOverviewTimeline().finally(() => {\n                        this.timeline.loaded = true;\n                    });\n                }\n                break;\n            case 'courses':\n                if (!this.courses.loaded) {\n                    this.fetchMyOverviewCourses().finally(() => {\n                        this.courses.loaded = true;\n                    });\n                }\n                break;\n            default:\n        }\n    }\n\n    /**\n     * Load more events.\n     */\n    loadMoreTimeline(): Promise<any> {\n        return this.fetchMyOverviewTimeline(this.timeline.canLoadMore);\n    }\n\n    /**\n     * Load more events.\n     *\n     * @param {any} course Course.\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    loadMoreCourse(course: any): Promise<any> {\n        return this.myOverviewProvider.getActionEventsByCourse(course.id, course.canLoadMore).then((courseEvents) => {\n            course.events = course.events.concat(courseEvents.events);\n            course.canLoadMore = courseEvents.canLoadMore;\n        });\n    }\n\n    /**\n     * Go to search courses.\n     */\n    openSearch(): void {\n        this.navCtrl.push('CoreCoursesSearchPage');\n    }\n\n    /**\n     * The selected courses have changed.\n     */\n    selectedChanged(): void {\n        this.filteredCourses = this.courses[this.courses.selected];\n    }\n\n    /**\n     * Prefetch all the shown courses.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    prefetchCourses(): Promise<any> {\n        const selected = this.courses.selected,\n            selectedData = this.prefetchCoursesData[selected],\n            initialIcon = selectedData.icon;\n\n        selectedData.icon = 'spinner';\n        selectedData.badge = '';\n\n        return this.courseHelper.confirmAndPrefetchCourses(this.courses[selected], (progress) => {\n            selectedData.badge = progress.count + ' / ' + progress.total;\n        }).then(() => {\n            selectedData.icon = 'refresh';\n        }).catch((error) => {\n            if (!this.isDestroyed) {\n                this.domUtils.showErrorModalDefault(error, 'core.course.errordownloadingcourse', true);\n                selectedData.icon = initialIcon;\n            }\n        }).finally(() => {\n            selectedData.badge = '';\n        });\n    }\n\n    /**\n     * Initialize the prefetch icon for selected courses.\n     */\n    protected initPrefetchCoursesIcons(): void {\n        if (this.prefetchIconsInitialized || !this.downloadAllCoursesEnabled) {\n            // Already initialized.\n            return;\n        }\n\n        this.prefetchIconsInitialized = true;\n\n        Object.keys(this.prefetchCoursesData).forEach((filter) => {\n            if (!this.courses[filter] || this.courses[filter].length < 2) {\n                // Not enough courses.\n                this.prefetchCoursesData[filter].icon = '';\n\n                return;\n            }\n\n            this.courseHelper.determineCoursesStatus(this.courses[filter]).then((status) => {\n                let icon = this.courseHelper.getCourseStatusIconAndTitleFromStatus(status).icon;\n                if (icon == 'spinner') {\n                    // It seems all courses are being downloaded, show a download button instead.\n                    icon = 'cloud-download';\n                }\n                this.prefetchCoursesData[filter].icon = icon;\n            });\n\n        });\n    }\n\n    /**\n     * Load the site name.\n     */\n    protected loadSiteName(): void {\n        this.siteName = this.sitesProvider.getCurrentSite().getInfo().sitename;\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.isDestroyed = true;\n        this.updateSiteObserver && this.updateSiteObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/courses/pages/my-overview/my-overview.ts"],"sourceRoot":""}