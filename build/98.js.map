{"version":3,"sources":["../../src/addon/mod/assign/pages/submission-list/submission-list.module.ts","../../src/addon/mod/assign/pages/submission-list/submission-list.ts"],"names":[],"mappings":"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","file":"98.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { AddonModAssignSubmissionListPage } from './submission-list';\n\n@NgModule({\n    declarations: [\n        AddonModAssignSubmissionListPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        IonicPageModule.forChild(AddonModAssignSubmissionListPage),\n        TranslateModule.forChild()\n    ],\n})\nexport class AddonModAssignSubmissionListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/submission-list/submission-list.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { TranslateService } from '@ngx-translate/core';\nimport { CoreEventsProvider } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { AddonModAssignProvider } from '../../providers/assign';\nimport { AddonModAssignOfflineProvider } from '../../providers/assign-offline';\nimport { AddonModAssignHelperProvider } from '../../providers/helper';\nimport { CoreSplitViewComponent } from '@components/split-view/split-view';\n\n/**\n * Page that displays a list of submissions of an assignment.\n */\n@IonicPage({ segment: 'addon-mod-assign-submission-list' })\n@Component({\n    selector: 'page-addon-mod-assign-submission-list',\n    templateUrl: 'submission-list.html',\n})\nexport class AddonModAssignSubmissionListPage implements OnInit, OnDestroy {\n    @ViewChild(CoreSplitViewComponent) splitviewCtrl: CoreSplitViewComponent;\n\n    title: string; // Title to display.\n    assign: any; // Assignment.\n    submissions: any[]; // List of submissions\n    loaded: boolean; // Whether data has been loaded.\n    haveAllParticipants: boolean; // Whether all participants have been loaded.\n    selectedSubmissionId: number; // Selected submission ID.\n\n    protected moduleId: number; // Module ID the submission belongs to.\n    protected courseId: number; // Course ID the assignment belongs to.\n    protected selectedStatus: string; // The status to see.\n    protected gradedObserver; // Observer to refresh data when a grade changes.\n\n    constructor(navParams: NavParams, sitesProvider: CoreSitesProvider, eventsProvider: CoreEventsProvider,\n            protected domUtils: CoreDomUtilsProvider, protected translate: TranslateService,\n            protected assignProvider: AddonModAssignProvider, protected assignOfflineProvider: AddonModAssignOfflineProvider,\n            protected assignHelper: AddonModAssignHelperProvider) {\n\n        this.moduleId = navParams.get('moduleId');\n        this.courseId = navParams.get('courseId');\n        this.selectedStatus = navParams.get('status');\n\n        if (this.selectedStatus) {\n            if (this.selectedStatus == AddonModAssignProvider.NEED_GRADING) {\n                this.title = this.translate.instant('addon.mod_assign.numberofsubmissionsneedgrading');\n            } else {\n                this.title = this.translate.instant('addon.mod_assign.submissionstatus_' + this.selectedStatus);\n            }\n        } else {\n            this.title = this.translate.instant('addon.mod_assign.numberofparticipants');\n        }\n\n        // Update data if some grade changes.\n        this.gradedObserver = eventsProvider.on(AddonModAssignProvider.GRADED_EVENT, (data) => {\n            if (this.assign && data.assignmentId == this.assign.id && data.userId == sitesProvider.getCurrentSiteUserId()) {\n                // Grade changed, refresh the data.\n                this.loaded = false;\n\n                this.refreshAllData().finally(() => {\n                    this.loaded = true;\n                });\n            }\n        }, sitesProvider.getCurrentSiteId());\n    }\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.fetchAssignment().finally(() => {\n            if (!this.selectedSubmissionId && this.splitviewCtrl.isOn() && this.submissions.length > 0) {\n                // Take first and load it.\n                this.loadSubmission(this.submissions[0]);\n            }\n\n            this.loaded = true;\n        });\n    }\n\n    /**\n     * Fetch assignment data.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected fetchAssignment(): Promise<any> {\n        let participants,\n            submissionsData;\n\n        // Get assignment data.\n        return this.assignProvider.getAssignment(this.courseId, this.moduleId).then((assign) => {\n            this.title = assign.name || this.title;\n            this.assign = assign;\n            this.haveAllParticipants = true;\n\n            // Get assignment submissions.\n            return this.assignProvider.getSubmissions(assign.id);\n        }).then((data) => {\n            if (!data.canviewsubmissions) {\n                // User shouldn't be able to reach here.\n                return Promise.reject(null);\n            }\n\n            submissionsData = data;\n\n            // Get the participants.\n            return this.assignHelper.getParticipants(this.assign).then((parts) => {\n                this.haveAllParticipants = true;\n                participants = parts;\n            }).catch(() => {\n                this.haveAllParticipants = false;\n            });\n        }).then(() => {\n            // We want to show the user data on each submission.\n            return this.assignProvider.getSubmissionsUserData(submissionsData.submissions, this.courseId, this.assign.id,\n                    this.assign.blindmarking && !this.assign.revealidentities, participants);\n        }).then((submissions) => {\n\n            // Filter the submissions to get only the ones with the right status and add some extra data.\n            const getNeedGrading = this.selectedStatus == AddonModAssignProvider.NEED_GRADING,\n                searchStatus = getNeedGrading ? AddonModAssignProvider.SUBMISSION_STATUS_SUBMITTED : this.selectedStatus,\n                promises = [];\n\n            this.submissions = [];\n            submissions.forEach((submission) => {\n                if (!searchStatus || searchStatus == submission.status) {\n                    promises.push(this.assignOfflineProvider.getSubmissionGrade(this.assign.id, submission.userid).catch(() => {\n                        // Ignore errors.\n                    }).then((data) => {\n                        let promise,\n                            notSynced = false;\n\n                        // Load offline grades.\n                        if (data && submission.timemodified < data.timemodified) {\n                            notSynced = true;\n                        }\n\n                        if (getNeedGrading) {\n                            // Only show the submissions that need to be graded.\n                            promise = this.assignProvider.needsSubmissionToBeGraded(submission, this.assign.id);\n                        } else {\n                            promise = Promise.resolve(true);\n                        }\n\n                        return promise.then((add) => {\n                            if (!add) {\n                                return;\n                            }\n\n                            submission.statusColor = this.assignProvider.getSubmissionStatusColor(submission.status);\n                            submission.gradingColor = this.assignProvider.getSubmissionGradingStatusColor(submission.gradingstatus);\n\n                            // Show submission status if not submitted for grading.\n                            if (submission.statusColor != 'success' || !submission.gradingstatus) {\n                                submission.statusTranslated = this.translate.instant('addon.mod_assign.submissionstatus_' +\n                                    submission.status);\n                            } else {\n                                submission.statusTranslated = false;\n                            }\n\n                            if (notSynced) {\n                                submission.gradingStatusTranslationId = 'addon.mod_assign.gradenotsynced';\n                                submission.gradingColor = '';\n                            } else if (submission.statusColor != 'danger' || submission.gradingColor != 'danger') {\n                                // Show grading status if one of the statuses is not done.\n                                submission.gradingStatusTranslationId =\n                                    this.assignProvider.getSubmissionGradingStatusTranslationId(submission.gradingstatus);\n                            } else {\n                                submission.gradingStatusTranslationId = false;\n                            }\n\n                            this.submissions.push(submission);\n                        });\n                    }));\n                }\n            });\n\n            return Promise.all(promises);\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'Error getting assigment data.');\n        });\n    }\n\n    /**\n     * Load a certain submission.\n     *\n     * @param {any} submission The submission to load.\n     */\n    loadSubmission(submission: any): void {\n        if (this.selectedSubmissionId === submission.id && this.splitviewCtrl.isOn()) {\n            // Already selected.\n            return;\n        }\n\n        this.selectedSubmissionId = submission.id;\n\n        this.splitviewCtrl.push('AddonModAssignSubmissionReviewPage', {\n            courseId: this.courseId,\n            moduleId: this.moduleId,\n            submitId: submission.submitid,\n            blindId: submission.blindid\n        });\n    }\n\n    /**\n     * Refresh all the data.\n     *\n     * @return {Promise<any>} Promise resolved when done.\n     */\n    protected refreshAllData(): Promise<any> {\n        const promises = [];\n\n        promises.push(this.assignProvider.invalidateAssignmentData(this.courseId));\n        if (this.assign) {\n            promises.push(this.assignProvider.invalidateAllSubmissionData(this.assign.id));\n            promises.push(this.assignProvider.invalidateAssignmentUserMappingsData(this.assign.id));\n            promises.push(this.assignProvider.invalidateListParticipantsData(this.assign.id));\n        }\n\n        return Promise.all(promises).finally(() => {\n            return this.fetchAssignment();\n        });\n    }\n\n    /**\n     * Refresh the list.\n     *\n     * @param {any} refresher Refresher.\n     */\n    refreshList(refresher: any): void {\n        this.refreshAllData().finally(() => {\n            refresher.complete();\n        });\n    }\n\n    /**\n     * Component being destroyed.\n     */\n    ngOnDestroy(): void {\n        this.gradedObserver && this.gradedObserver.off();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/mod/assign/pages/submission-list/submission-list.ts"],"sourceRoot":""}