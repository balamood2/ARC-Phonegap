{"version":3,"sources":["../../src/addon/notifications/pages/list/list.module.ts","../../src/addon/notifications/components/components.module.ts","../../src/addon/notifications/components/actions/actions.ts","../../src/addon/notifications/pages/list/list.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { CoreComponentsModule } from '@components/components.module';\nimport { CoreDirectivesModule } from '@directives/directives.module';\nimport { CorePipesModule } from '@pipes/pipes.module';\nimport { AddonNotificationsComponentsModule } from '../../components/components.module';\nimport { AddonNotificationsListPage } from './list';\n\n@NgModule({\n    declarations: [\n        AddonNotificationsListPage,\n    ],\n    imports: [\n        CoreComponentsModule,\n        CoreDirectivesModule,\n        CorePipesModule,\n        IonicPageModule.forChild(AddonNotificationsListPage),\n        TranslateModule.forChild(),\n        AddonNotificationsComponentsModule,\n    ],\n})\nexport class AddonNotificationsListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/pages/list/list.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from 'ionic-angular';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { AddonNotificationsActionsComponent } from './actions/actions';\n\n@NgModule({\n    declarations: [\n        AddonNotificationsActionsComponent\n    ],\n    imports: [\n        CommonModule,\n        IonicModule,\n        TranslateModule.forChild(),\n    ],\n    providers: [\n    ],\n    exports: [\n        AddonNotificationsActionsComponent\n    ],\n})\nexport class AddonNotificationsComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { CoreContentLinksDelegate, CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\n\n/**\n * Component that displays the actions for a notification.\n */\n@Component({\n    selector: 'addon-notifications-actions',\n    templateUrl: 'addon-notifications-actions.html',\n})\nexport class AddonNotificationsActionsComponent implements OnInit {\n    @Input() contextUrl: string;\n    @Input() courseId: number;\n\n    actions: CoreContentLinksAction[] = [];\n\n    constructor(private contentLinksDelegate: CoreContentLinksDelegate) {}\n\n    /**\n     * Component being initialized.\n     */\n    ngOnInit(): void {\n        this.contentLinksDelegate.getActionsFor(this.contextUrl, this.courseId).then((actions) => {\n            this.actions = actions;\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/components/actions/actions.ts","// (C) Copyright 2015 Martin Dougiamas\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport { Component } from '@angular/core';\nimport { IonicPage, NavParams } from 'ionic-angular';\nimport { Subscription } from 'rxjs';\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\nimport { CoreEventsProvider, CoreEventObserver } from '@providers/events';\nimport { CoreSitesProvider } from '@providers/sites';\nimport { CoreUtilsProvider } from '@providers/utils/utils';\nimport { AddonNotificationsProvider } from '../../providers/notifications';\nimport { AddonPushNotificationsDelegate } from '@addon/pushnotifications/providers/delegate';\n\n/**\n * Page that displays the list of notifications.\n */\n@IonicPage({ segment: 'addon-notifications-list' })\n@Component({\n    selector: 'page-addon-notifications-list',\n    templateUrl: 'list.html',\n})\nexport class AddonNotificationsListPage {\n\n    notifications = [];\n    notificationsLoaded = false;\n    canLoadMore = false;\n    canMarkAllNotificationsAsRead = false;\n    loadingMarkAllNotificationsAsRead = false;\n\n    protected readCount = 0;\n    protected unreadCount = 0;\n    protected cronObserver: CoreEventObserver;\n    protected pushObserver: Subscription;\n\n    constructor(navParams: NavParams, private domUtils: CoreDomUtilsProvider, private eventsProvider: CoreEventsProvider,\n            private sitesProvider: CoreSitesProvider, private textUtils: CoreTextUtilsProvider,\n            private utils: CoreUtilsProvider, private notificationsProvider: AddonNotificationsProvider,\n            private pushNotificationsDelegate: AddonPushNotificationsDelegate) {\n    }\n\n    /**\n     * View loaded.\n     */\n    ionViewDidLoad(): void {\n        this.fetchNotifications().finally(() => {\n            this.notificationsLoaded = true;\n        });\n\n        this.cronObserver = this.eventsProvider.on(AddonNotificationsProvider.READ_CRON_EVENT, () => this.refreshNotifications(),\n                this.sitesProvider.getCurrentSiteId());\n\n        this.pushObserver = this.pushNotificationsDelegate.on('receive').subscribe((notification) => {\n            // New notification received. If it's from current site, refresh the data.\n            if (this.utils.isTrueOrOne(notification.notif) && this.sitesProvider.isCurrentSite(notification.site)) {\n                this.refreshNotifications();\n            }\n        });\n    }\n\n    /**\n     * Convenience function to get notifications. Gets unread notifications first.\n     *\n     * @param {boolean} refreh Whether we're refreshing data.\n     * @return {Promise<any>} Resolved when done.\n     */\n    protected fetchNotifications(refresh?: boolean): Promise<any> {\n        if (refresh) {\n            this.readCount = 0;\n            this.unreadCount = 0;\n        }\n\n        const limit = AddonNotificationsProvider.LIST_LIMIT;\n\n        return this.notificationsProvider.getUnreadNotifications(this.unreadCount, limit).then((unread) => {\n            const promises = [];\n\n            unread.forEach(this.formatText.bind(this));\n\n            /* Don't add the unread notifications to this.notifications yet. If there are no unread notifications\n               that causes that the \"There are no notifications\" message is shown in pull to refresh. */\n            this.unreadCount += unread.length;\n\n            if (unread.length < limit) {\n                // Limit not reached. Get read notifications until reach the limit.\n                const readLimit = limit - unread.length;\n                promises.push(this.notificationsProvider.getReadNotifications(this.readCount, readLimit).then((read) => {\n                    read.forEach(this.formatText.bind(this));\n                    this.readCount += read.length;\n                    if (refresh) {\n                        this.notifications = unread.concat(read);\n                    } else {\n                        this.notifications = this.notifications.concat(unread, read);\n                    }\n                    this.canLoadMore = read.length >= readLimit;\n                }).catch((error) => {\n                    if (unread.length == 0) {\n                        this.domUtils.showErrorModalDefault(error, 'addon.notifications.errorgetnotifications', true);\n                        this.canLoadMore = false; // Set to false to prevent infinite calls with infinite-loading.\n                    }\n                }));\n            } else {\n                if (refresh) {\n                    this.notifications = unread;\n                } else {\n                    this.notifications = this.notifications.concat(unread);\n                }\n                this.canLoadMore = true;\n            }\n\n            return Promise.all(promises).then(() => {\n                // Mark retrieved notifications as read if they are not.\n                this.markNotificationsAsRead(unread);\n            });\n        }).catch((error) => {\n            this.domUtils.showErrorModalDefault(error, 'addon.notifications.errorgetnotifications', true);\n            this.canLoadMore = false; // Set to false to prevent infinite calls with infinite-loading.\n        });\n    }\n\n    /**\n     * Mark all notifications as read.\n     */\n    markAllNotificationsAsRead(): void {\n        this.loadingMarkAllNotificationsAsRead = true;\n        this.notificationsProvider.markAllNotificationsAsRead().catch(() => {\n            // Omit failure.\n        }).finally(() => {\n            const siteId = this.sitesProvider.getCurrentSiteId();\n            this.eventsProvider.trigger(AddonNotificationsProvider.READ_CHANGED_EVENT, null, siteId);\n\n            this.notificationsProvider.getUnreadNotificationsCount().then((unread) => {\n                this.canMarkAllNotificationsAsRead = unread > 0;\n                this.loadingMarkAllNotificationsAsRead = false;\n            });\n        });\n    }\n\n    /**\n     * Mark notifications as read.\n     *\n     * @param {any[]} notifications Array of notification objects.\n     */\n    protected markNotificationsAsRead(notifications: any[]): void {\n        let promise;\n\n        if (notifications.length > 0) {\n            const promises = notifications.map((notification) => {\n                return this.notificationsProvider.markNotificationRead(notification.id);\n            });\n\n            promise = Promise.all(promises).catch(() => {\n                // Ignore errors.\n            }).finally(() => {\n                this.notificationsProvider.invalidateNotificationsList().finally(() => {\n                    const siteId = this.sitesProvider.getCurrentSiteId();\n                    this.eventsProvider.trigger(AddonNotificationsProvider.READ_CHANGED_EVENT, null, siteId);\n                });\n            });\n        } else {\n            promise = Promise.resolve();\n        }\n\n        promise.finally(() => {\n            // Check if mark all notifications as read is enabled and there are some to read.\n            if (this.notificationsProvider.isMarkAllNotificationsAsReadEnabled()) {\n                this.loadingMarkAllNotificationsAsRead = true;\n\n                return this.notificationsProvider.getUnreadNotificationsCount().then((unread) => {\n                    this.canMarkAllNotificationsAsRead = unread > 0;\n                    this.loadingMarkAllNotificationsAsRead = false;\n                });\n            }\n            this.canMarkAllNotificationsAsRead = false;\n        });\n    }\n\n    /**\n     * Refresh notifications.\n     *\n     * @param {any} [refresher] Refresher.\n     */\n    refreshNotifications(refresher?: any): void {\n        this.notificationsProvider.invalidateNotificationsList().finally(() => {\n            return this.fetchNotifications(true).finally(() => {\n                if (refresher) {\n                    refresher.complete();\n                }\n            });\n        });\n    }\n\n    /**\n     * Load more results.\n     *\n     * @param {any} infiniteScroll The infinit scroll instance.\n     */\n    loadMoreNotifications(infiniteScroll: any): void {\n        this.fetchNotifications().finally(() => {\n            infiniteScroll.complete();\n        });\n    }\n\n    /**\n     * Formats the text of a notification.\n     *\n     * @param {any} notification The notification object.\n     */\n    protected formatText(notification: any): void {\n        const text = notification.mobiletext.replace(/-{4,}/ig, '');\n        notification.mobiletext = this.textUtils.replaceNewLines(text, '<br>');\n    }\n\n    /**\n     * Page destroyed.\n     */\n    ngOnDestroy(): void {\n        this.cronObserver && this.cronObserver.off();\n        this.pushObserver && this.pushObserver.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/notifications/pages/list/list.ts"],"sourceRoot":""}